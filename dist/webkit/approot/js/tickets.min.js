/*! tickets webkit - v0.2.0 - 2017-06-26 */

angular.module("tickets.directives.ioloader",[]).directive("ioLoader",["App.Socket","PubSub",function(a,b){function c(a){var b=document.createElement("script");b.setAttribute("type","text/javascript"),b.setAttribute("src",a),void 0!==b&&document.getElementsByTagName("head")[0].appendChild(b)}function d(c){window.setTimeout(function(){if("function"==typeof io&&"string"==typeof c){var e=io("http://"+c+":7777");a.setSocket(e),a.setSocketCallback(function(a){console.log("void",a),b.publish("void-update",a)}),console.log("connected socket")}else console.log("io not defined or empty ip, retrying"),window.setTimeout(function(){d(c)},0)},500)}return{restrict:"E",scope:{ipAddress:"@"},link:function(a,b,e){function f(){e.ipAddress&&(c("http://"+e.ipAddress+":7777/socket.io/socket.io.js"),d(e.ipAddress))}e.$observe("ipAddress",function(){f()})}}}]),angular.module("tickets.services.socket",[]).factory("App.Socket",function(){return{socket:null,socketCallback:null,setSocket:function(a){var b=this;this.socket=a,this.socket.on("ticket.void",function(a){"function"==typeof b.socketCallback&&b.socketCallback(a)})},setSocketCallback:function(a){"function"==typeof a&&(this.socketCallback=a)},sendTicketVoid:function(a){this.socket&&this.socket.emit("ticket.void",a)}}}),function(){"use strict";angular.module("ticket-server",["ui.bootstrap","ngRoute","cgBusy","PubSub","tickets.controllers.tickets","tickets.services.settings","tickets.services.sync","tickets.directives.ioloader","tickets.services.socket"]).config(["$routeProvider","$locationProvider","$logProvider","$compileProvider",function(a,b,c,d){c.debugEnabled(!0);var e="./partials/";a.eagerInstantiationEnabled(!0),a.when("/list",{templateUrl:e+"tickets_list.html",controller:"Tickets.List"}),a.when("/sync",{templateUrl:e+"sync.html",controller:"Tickets.Sync"}),a.otherwise({redirectTo:"/list"})}]).run(["$rootScope","$q","$location","App.Sync",function(a,b,c,d){a.goto=function(a){c.path(a)},a.$on("$routeChangeStart",function(c,d,e){a.pageDefer&&(a.pageDefer.resolve(),a.pageDefer=null),a.pageDefer=b.defer(),a.pagePromise=a.pageDefer.promise}),a.$on("$routeChangeSuccess",function(b,c,d){a.pageDefer&&(a.pageDefer.resolve(),a.pageDefer=null)}),a.$on("$routeChangeError",function(b,c,d){a.pageDefer&&(a.pageDefer.reject(),a.pageDefer=null)}),global.require("lib-local/socket.io").setup(),d.startBackgroundSync()}])}(),function(){"use strict";var a=global.require;angular.module("tickets.controllers.tickets",[]).controller("Tickets.List",["$scope","$q","PubSub",function(b,c,d){function e(){g(function(){setTimeout(e,2e3)})}var f=a("lib-local/db.js");b.tickets=[],b.filter={query:void 0},b.$watch("filter.query",function(a){async.each(b.tickets,function(c,d){[c.firstname?c.firstname.toLowerCase():"",c.lastname?c.lastname.toLowerCase():"",c.order_number?c.order_number.toLowerCase():"",c.token].join(" ").indexOf(a.toLowerCase())<0?b.tickets[b.tickets.indexOf(c)].hideEntry=!0:b.tickets[b.tickets.indexOf(c)].hideEntry=!1,d()})}),b.claimTicket=function(a){window.confirm("Are you sure you are claiming the right ticket "+a.token+" ("+[a.firstname,a.lastname].join(" ")+")?")&&(delete a.$$hashKey,a.void=!0,a.void_at=new Date,f.update(a,a.token,function(a){a&&(b.alerts=[{type:"danger",msg:a.message}]),b.$apply()}))};var g=function(a){f.find({},function(c,d){if(d.sort(function(a,b){return a.lastname<b.lastname?-1:a.lastname>b.lastname?1:0}),c)b.alerts=[{type:"danger",msg:c.message}];else if(0===b.tickets.length)b.tickets=d;else for(var e in d)!b.tickets[e].void&&d[e].void&&(b.tickets[e].void=d[e].void,b.tickets[e].void_at=d[e].void_at);h.resolve(),b.$apply(),"function"==typeof a&&a()})},h=c.defer();b.promiseString="Loading tickets...",b.promise=h.promise,e()}]).controller("Tickets.Sync",["$scope","$q","App.Settings",function(a,b,c){a.remote={url:c.remote.url,login:c.remote.login,password:c.remote.password},a.local={url:c.push.url},a.submitSync=function(){var d=b.defer();a.promiseString="Saving...",a.promise=d.promise,c.storeRemote(a.remote.url,a.remote.login,a.remote.password),a.alerts=[{type:"success",msg:"Sync settings saved"}],d.resolve()},a.submitPush=function(){var d=b.defer();a.promiseString="Saving...",a.promise=d.promise,c.storePush(a.local.url),a.alerts=[{type:"success",msg:"Push settings saved"}],d.resolve()}}])}(),angular.module("tickets.services.settings",[]).factory("App.Settings",function(){return{remote:{url:localStorage["remote.url"],login:localStorage["remote.login"],password:localStorage["remote.password"]},push:{url:localStorage["push.url"]},stats:{last_sync:localStorage["stats.last_sync"],last_push:localStorage["stats.last_push"]},storeRemote:function(a,b,c){this.remote.url=a,this.remote.login=b,this.remote.password=c,localStorage["remote.url"]=this.remote.url,localStorage["remote.login"]=this.remote.login,localStorage["remote.password"]=this.remote.password},storePush:function(a){this.remote.url=a,localStorage["push.url"]=this.remote.url}}}),angular.module("tickets.services.sync",[]).factory("App.Sync",["App.Settings","$http","PubSub",function(a,b,c){return{startBackgroundSync:function(){function a(){b.syncRemote(function(){setTimeout(a,6e4)})}var b=this;a()},syncRemote:function(d){var e=require("lib-local/db.js");if(!a.remote.url||!a.remote.login||!a.remote.password)return d();console.log("syncing...");var f=!1;async.waterfall([function(c){b({url:a.remote.url+"/api/access_tokens.json",method:"POST",data:{email:a.remote.login,password:a.remote.password}}).then(function(a){c(null,a)},function(a){c(null,a)})},function(a,b){200===a.status?b(null,a.data.token):403===a.status?b(new Error("Access Denied"),null):b(new Error("Unknown error: HTTP status "+a.status),null)},function(c,d){b({url:a.remote.url+"/api/data/dump/tickets.json",method:"GET",headers:{"X-Authentication":c}}).then(function(a){d(null,a)},function(a){d(null,a)})},function(a,b){200===a.status?b(null,a.data):403===a.status?b(new Error("Access Denied"),null):b(new Error("Unknown error: HTTP status "+a.status),null)},function(a,b){async.each(a,function(a,b){async.waterfall([function(b){e.findOne({token:a.token},b)},function(b,c){b?c(null,b):(f=!0,e.create(a,c))}],function(a){b(a)})},function(a){b(a)})}],function(a){if(a)return console.log("Sync failed with error: "+a.message),d(a);f?(console.log("sync completed - updating"),c.publish("sync-update")):console.log("sync completed - no updates"),d()})},pushLocal:function(){}}}]);