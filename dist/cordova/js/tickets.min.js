/*! NondescriptTicketSoftware cordova - v0.2.0 - 2017-06-28 */

angular.module("tickets.directives.ioloader",[]).directive("ioLoader",["App.Socket","PubSub",function(a,b){function c(a){var b=document.getElementById("socketScript"),c=document.createElement("script");c.setAttribute("id","socketScript"),c.setAttribute("type","text/javascript"),c.setAttribute("src",a),b&&c&&c.src!==b.src?(document.getElementsByTagName("head")[0].removeChild(b),document.getElementsByTagName("head")[0].appendChild(c)):c&&!b&&document.getElementsByTagName("head")[0].appendChild(c)}function d(c){window.setTimeout(function(){if("function"==typeof io&&"string"==typeof c){var e=io("http://"+c+":7777");a.setSocket(e),a.setSocketCallback(function(a){console.log("Socket.io void callback with token:",a),b.publish("void-update",a)}),console.log("Socket.io connected")}else console.log("Socket.io not defined or empty IP, retrying"),window.setTimeout(function(){d(c)},100)},500)}return{restrict:"E",scope:{ipAddress:"@"},link:function(a,b,e){function f(){e.ipAddress&&(c("http://"+e.ipAddress+":7777/socket.io/socket.io.js"),d(e.ipAddress))}e.$observe("ipAddress",function(){f()})}}}]),angular.module("tickets.directives.utils",[]).directive("stringToNumber",function(){return{require:"ngModel",link:function(a,b,c,d){d.$parsers.push(function(a){return""+a}),d.$formatters.push(function(a){return parseFloat(a)})}}}),angular.module("tickets.services.heartbeat",[]).factory("App.Heartbeat",["$http",function(a){return{target:null,interval:2e3,timeout:null,status:null,setup:function(a,b){this.target=a,this.interval=b||2e3},start:function(){function b(){a.get(c.target).then(function(a){c.status=200===a.status,c.timeout=setTimeout(b,c.interval)},function(){c.status=!1,c.timeout=setTimeout(b,c.interval)})}if("string"==typeof this.target){this.stop();var c=this;b()}},stop:function(){this.timeout&&clearTimeout(this.timeout)}}}]),angular.module("tickets.services.socket",[]).factory("App.Socket",function(){return{socket:null,socketCallback:null,setSocket:function(a){var b=this;this.socket=a,this.socket.on("ticket.void",function(a){"function"==typeof b.socketCallback&&b.socketCallback(a)})},setSocketCallback:function(a){"function"==typeof a&&(this.socketCallback=a)},sendTicketVoid:function(a){this.socket&&this.socket.emit("ticket.void",a)}}}),function(){"use strict";angular.module("ticket-scanner",["ui.bootstrap","ngRoute","cgBusy","PubSub","tickets.directives.ioloader","tickets.controllers.tickets","tickets.services.settings","tickets.services.socket","tickets.services.heartbeat"]).config(["$routeProvider","$locationProvider","$logProvider",function(a,b,c){c.debugEnabled(!0);var d="./partials/";a.when("/",{templateUrl:d+"scan.html",controller:"Tickets.Scan"}),a.when("/settings",{templateUrl:d+"settings.html",controller:"Tickets.Settings"}),a.otherwise({redirectTo:"/"})}]).run(["$rootScope","$q","App.Settings","$location",function(a,b,c,d){a.goto=function(a){d.path(a)},a.remote={ip:c.remote.ip},a.$apply(),a.$on("$routeChangeStart",function(c,d,e){a.pageDefer&&(a.pageDefer.resolve(),a.pageDefer=null),a.pageDefer=b.defer(),a.pagePromise=a.pageDefer.promise}),a.$on("$routeChangeSuccess",function(b,c,d){a.pageDefer&&(a.pageDefer.resolve(),a.pageDefer=null)}),a.$on("$routeChangeError",function(b,c,d){a.pageDefer&&(a.pageDefer.reject(),a.pageDefer=null)})}])}(),function(){"use strict";angular.module("tickets.controllers.tickets",[]).controller("Tickets.Scan",["$scope","$q","$routeParams","App.Socket","App.Settings","App.Heartbeat","$http",function(a,b,c,d,e,f,g){a.settings=e,a.heartbeat=f,a.heartbeat.setup("http://"+e.remote.ip+":9999/api/heartbeat.json"),a.heartbeat.start(),a.scan=function(){cordova.plugins.barcodeScanner.scan(function(b){b.cancelled||g({method:"POST",url:"http://"+e.remote.ip+":9999/api/tickets/void.json",data:{token:b.text},headers:{"Content-Type":"application/json"}}).then(function(b){var c;switch(b.status){case 200:b.data.success?(a.$applyAsync(function(){a.alerts=[{type:"success",msg:"Ticket is valid",ticket:b.data.ticket}]}),b.data.ticket&&d.sendTicketVoid(b.data.ticket.token)):a.$applyAsync(function(){a.alerts=[{type:"danger",msg:b.data.error,ticket:b.data.ticket}]});break;case 401:c=b.data.error;break;case 402:c=b.data.ticket?"Ticket not fully paid: €"+b.data.ticket.order_amount_paid+" of €"+b.data.ticket.order_amount_due:"Ticket payment incomplete";break;case 403:c="Ticket invalid";break;case 404:c="Ticket unknown";break;case 500:c="Internal Error";break;default:c="Request failed with status "+b.status}a.$applyAsync(function(){a.alerts=[{type:"danger",msg:c}]})},function(b){a.$applyAsync(function(){a.alerts=[{type:"danger",msg:"Request failed with status "+b.status}]})})},function(b){a.alerts=[{type:"danger",msg:"Scan failed: "+b.message}]})}}]).controller("Tickets.Settings",["$scope","$q","$routeParams","App.Settings","$rootScope",function(a,b,c,d,e){a.remote={ip:d.remote.ip},a.submit=function(){d.storeRemote(a.remote.ip),e.remote={ip:a.remote.ip},a.alerts=[{type:"success",msg:"Settings saved"}]}}]).controller("Tickets.List",["$scope","$q","$routeParams","App.Settings",function(a,b,c,d){a.tickets=[],a.filter={query:null},a.$watch("filter.query",function(b){async.each(a.tickets,function(c,d){[c.firstname,c.lastname,c.token].join(" ").indexOf(b)<0?a.tickets[a.tickets.indexOf(c)].hideEntry=!0:a.tickets[a.tickets.indexOf(c)].hideEntry=!1,d()})});var e=new XMLHttpRequest;e.open("GET","http://"+d.remote.ip+":9999/api/tickets/all.json",!0),e.setRequestHeader("Content-Type","application/json"),e.onreadystatechange=function(){4===e.readyState&&(200===e.status?(a.tickets=JSON.parse(e.responseText),a.$apply()):console.log({code:e.status,message:null},e.responseText))},e.send()}])}();var app={initialize:function(){this.bindEvents()},bindEvents:function(){document.addEventListener("deviceready",this.onDeviceReady,!1)},onDeviceReady:function(){app.receivedEvent("deviceready")},receivedEvent:function(a){console.log("Received Event: "+a)}};angular.module("tickets.services.settings",[]).factory("App.Settings",["$rootScope","App.Heartbeat",function(a,b){return{remote:{ip:localStorage["remote.ip"]},storeRemote:function(c){this.remote.ip=c,localStorage["remote.ip"]=this.remote.ip,b.setup(this.remote.ip),a.remote.ip=c}}}]);