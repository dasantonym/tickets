/*! tickets cordova - v0.1.0 - 2017-06-20 */

!function(){"use strict";angular.module("ticket-scanner",["ui.bootstrap","ngRoute","cgBusy","tickets.controllers.tickets","tickets.services.settings","tickets.services.socket"]).config(["$routeProvider","$locationProvider","$logProvider",function(a,b,c){c.debugEnabled(!0);var d="./partials/";a.when("/",{templateUrl:d+"scan.html",controller:"Tickets.Scan"}),a.when("/settings",{templateUrl:d+"settings.html",controller:"Tickets.Settings"}),a.otherwise({redirectTo:"/"})}]).run(["$rootScope","$q","App.Settings","$location",function(a,b,c,d){a.goto=function(a){d.path(a)},a.remote={ip:c.remote.ip},a.$apply(),a.$on("$routeChangeStart",function(c,d,e){a.pageDefer&&(a.pageDefer.resolve(),a.pageDefer=null),a.pageDefer=b.defer(),a.pagePromise=a.pageDefer.promise}),a.$on("$routeChangeSuccess",function(b,c,d){a.pageDefer&&(a.pageDefer.resolve(),a.pageDefer=null)}),a.$on("$routeChangeError",function(b,c,d){a.pageDefer&&(a.pageDefer.reject(),a.pageDefer=null)})}])}(),function(){"use strict";angular.module("tickets.controllers.tickets",[]).controller("Tickets.Scan",["$scope","$q","$routeParams","App.Socket","App.Settings",function(a,b,c,d,e){a.scan=function(){cordova.plugins.barcodeScanner.scan(function(b){if(!b.cancelled){var c=new XMLHttpRequest;c.open("GET","http://"+e.remote.ip+":9999/api/v1/ticket_void.json?"+b.text,!0),c.setRequestHeader("Content-Type","application/json"),c.onreadystatechange=function(){if(4===c.readyState){if(200===c.status){var b=JSON.parse(c.responseText);b.success?a.alerts=[{type:"success",msg:"Ticket is valid",ticket:b.ticket}]:a.alerts=[{type:"danger",msg:b.error}]}else a.alerts=[{type:"danger",msg:"Server connection failed with status: "+c.status}],console.log({code:c.status,message:null},c.responseText);a.$apply()}},c.send()}},function(b){a.alerts=[{type:"danger",msg:"Scan failed: "+b}]})}}]).controller("Tickets.Settings",["$scope","$q","$routeParams","App.Settings","$rootScope",function(a,b,c,d,e){a.remote={ip:d.remote.ip},a.submit=function(){d.storeRemote(a.remote.ip),e.remote={ip:a.remote.ip},a.alerts=[{type:"success",msg:"Settings saved"}]}}]).controller("Tickets.List",["$scope","$q","$routeParams",function(a,b,c){a.tickets=[],a.filter={query:null},a.$watch("filter.query",function(b){async.each(a.tickets,function(c,d){[c.firstname,c.lastname,c.ticket_key].join(" ").indexOf(b)<0?a.tickets[a.tickets.indexOf(c)].hideEntry=!0:a.tickets[a.tickets.indexOf(c)].hideEntry=!1,d()})});var d=new XMLHttpRequest;d.open("GET","http://192.168.1.25:9999/api/v1/electronic_tickets.json",!0),d.setRequestHeader("Content-Type","application/json"),d.onreadystatechange=function(){4===d.readyState&&(200===d.status?(a.tickets=JSON.parse(d.responseText),a.$apply()):console.log({code:d.status,message:null},d.responseText))},d.send()}])}();var app={initialize:function(){this.bindEvents()},bindEvents:function(){document.addEventListener("deviceready",this.onDeviceReady,!1)},onDeviceReady:function(){app.receivedEvent("deviceready")},receivedEvent:function(a){console.log("Received Event: "+a)}};angular.module("tickets.directives.ioloader",[]).directive("ioLoader",["App.Socket",function(a){function b(a){var b=document.createElement("script");b.setAttribute("type","text/javascript"),b.setAttribute("src",a),void 0!==b&&document.getElementsByTagName("head")[0].appendChild(b)}function c(b){console.log(typeof io),window.setTimeout(function(){if("function"==typeof io){var d=io("http://"+b+":7777");a.setSocket(d),a.setSocketCallback(function(a){console.log("void",a)}),console.log("connected socket")}else console.log("io not defined, retrying",io),window.setTimeout(function(){c(b)},0)},500)}return{restrict:"E",scope:{ipAddress:"@"},link:function(a,d,e){console.log(e.ipAddress),e.ipAddress&&(b("http://"+e.ipAddress+":7777/socket.io/socket.io.js"),c(e.ipAddress)),e.$observe("ipAddress",function(){e.ipAddress&&(b("http://"+e.ipAddress+":7777/socket.io/socket.io.js"),c(e.ipAddress))})}}}]),angular.module("tickets.services.settings",[]).factory("App.Settings",function(){return{remote:{ip:localStorage["remote.ip"]},storeRemote:function(a){this.remote.ip=a,localStorage["remote.ip"]=this.remote.ip}}}),angular.module("tickets.services.socket",[]).factory("App.Socket",function(){return{socket:null,socketCallback:null,setSocket:function(a){this.socket=a,this.socket.on("ticket.void",function(a){"function"==typeof this.socketCallback&&this.socketCallback(a)})},setSocketCallback:function(a){"function"==typeof a&&(this.socketCallback=a)},sendTicketVoid:function(a){this.socket&&this.socket.emit("ticket.void",a)}}});